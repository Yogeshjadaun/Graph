/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	
		static public class Graph{
			int vertex;
			LinkedList<Integer> adjList[];
			Graph(int vertex){
				this.vertex=vertex;
				adjList=new LinkedList[vertex];
				for(int i=0;i<vertex;i++){
					adjList[i]=new LinkedList<>();
				}
			}
		}
		public static void addEdge(Graph graph,int src,int dest){
			graph.adjList[src].addFirst(dest);
		}
		public static void displayGraph(Graph g){
			for(int i=0;i<g.vertex;i++){
				System.out.println();
				System.out.print(i+"    ");
				for(int l:g.adjList[i]){
				   System.out.print(l+" ");
				}
			}
		}
    public static int motherVertex(Graph g){
        int mv=0;
        boolean visited[]=new boolean[g.vertex];
        
        for(int i=0;i<g.vertex;i++){
            if(!visited[i]){
                //System.out.println(i);
             mv=i;
             Stack<Integer> st = new Stack<Integer>();
             st.push(i);
             while(st.empty()==false){
                 int v=st.pop();
                 //System.out.println(v);
                 visited[v]=true;  
                 for(int j:g.adjList[v]){
                     //System.out.print(v+"   ");
                     if(!visited[j]){
                         //System.out.print(j+" ");
                         st.push(j);
                         visited[j]=true;
                     }
                 }
             }
            }
        }
        for(int i=0;i<g.vertex;i++)
           visited[i]=false;
          Stack<Integer> st = new Stack<Integer>();
             st.push(mv);
             while(st.empty()==false){
                 int v=st.pop();
                 //System.out.println(v);
                 visited[v]=true;  
                 for(int j:g.adjList[v]){
                     //System.out.print(v+"   ");
                     if(!visited[j]){
                         //System.out.print(j+" ");
                         st.push(j);
                         visited[j]=true;
                     }
                 }
             }
             int i=0;
        for( i=0;i<g.vertex;i++)
           if(!visited[i])break;
        if(i==g.vertex)
        return mv;
        return -1;
    }
	public static void main (String[] args) throws java.lang.Exception
	{
        int V = 7;

            Graph g = new Graph(V);
            addEdge(g,0, 1);
            addEdge(g,0, 2);
            addEdge(g,1, 3);
            addEdge(g,4, 1);
            addEdge(g,6, 4);
            addEdge(g,5, 6);
            addEdge(g,5, 2);
            addEdge(g,6, 0);
            System.out.println(motherVertex(g));

    }
}
