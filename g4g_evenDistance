/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	
		static public class Graph{
			int vertex;
			LinkedList<Integer> adjList[];
			Graph(int vertex){
				this.vertex=vertex;
				adjList=new LinkedList[vertex];
				for(int i=0;i<vertex;i++){
					adjList[i]=new LinkedList<>();
				}
			}
		}
		public static void addEdge(Graph graph,int src,int dest){
			graph.adjList[src].addFirst(dest);
			graph.adjList[dest].addFirst(src);
		}
		public static void displayGraph(Graph g){
			for(int i=0;i<g.vertex;i++){
				System.out.println();
				System.out.print(i+"    ");
				for(int l:g.adjList[i]){
				   System.out.print(l+" ");
				}
			}
		}
    public static int evenDistance(Graph g){
        boolean visited[]=new boolean[g.vertex];
        int dist[]=new int[g.vertex];
        long even=0,odd=0,cnt=0;
        LinkedList<Integer> queue=new LinkedList<>();
        queue.add(0);
        while(!queue.isEmpty()){
            int v=queue.poll();
            visited[v]=true;
            for(int a:g.adjList[v]){
                if(!visited[a]){
                    queue.add(a);
                    visited[a]=true;
                   dist[a]=dist[v]+1;
                }
            }
        }
        for(int i=0;i<g.vertex;i++){
            if(dist[i]%2==0)
             even++;
             else
              odd++;
        }
        long aa=((even*(even-1))/2);
        long bb=((odd*(odd-1))/2);
        return (int)aa+(int)bb;
    }
	public static void main (String[] args) throws java.lang.Exception
	{
        //int V = 5;
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        for(int tt=0;tt<t;tt++){
            int n=sc.nextInt();
            Graph graph = new Graph(n);
            for(int qq=0;qq<n-1;qq++){
                int src=sc.nextInt();
                int dest=sc.nextInt();
                addEdge(graph,src-1,dest-1);
            }
        System.out.println(evenDistance(graph));
        }
        // addEdge(graph, 0, 1);
        // addEdge(graph, 0, 4);
        // addEdge(graph, 1, 2);
        // addEdge(graph, 1, 3);
        // addEdge(graph, 1, 4);
        // addEdge(graph, 2, 3);
        // addEdge(graph, 3, 4);

        // displayGraph(graph);
    }
}
